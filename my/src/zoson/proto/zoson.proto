option java_package = "com.zoson.detection.proto";
option java_outer_classname = "ZosonProto";

message TestProto
{
	required int32 clazz_num = 1;
	repeated int32 dim = 2;
}

message DetectorParameter
{
	required string name = 1;
	required string model = 2;
	required string weight = 3;
	optional bool use_gpu = 4 [default = true];
	optional bool do_vis = 5 [default = false];
	optional int32 fq_vis = 6 [default = 10];
	optional float threshold = 7 [default = 0.5];
	optional bool shared = 8 [default = false];
	optional bool istrain = 9 [default = false];
	optional string solver = 10;
	optional string snapshot = 11;
}

message DetectInput
{
	required int32 width = 2;
	required int32 height = 3;
	required bytes data = 4;
	enum Format
	{
		JPG = 0;
		PNG = 1;
		RGB = 2;
		YOV_420 = 3;
		YOV_422 = 4;
	}
}

message DetectOutput
{
	repeated Result results = 1;
}

message Result
{
	required float xmin = 1;
	required float ymin = 2;
	required float xmax = 3;
	required float ymax = 4;
	required int32 clazz = 5;
	required float score = 6;
}

message CommuParameter
{
	optional string address = 1 [default = "localhost"];
	optional int32 port = 2 [default = 10086];
	optional string client_name = 3 [default = "web"];
	optional Type type = 4 [default = LOC];
	enum Type
	{
		LOC = 0;
		IPC = 1;
		TCP = 3;
		RTMP = 4;
	}
}

message ClassMaps
{
	repeated ClassMap item = 1;
}

message ClassMap
{
	required string name = 1;
	required int32 label = 2;
	required string display_name = 3;
}

message Cookie
{
	required string ID = 1;
	required string name = 2;
}

message Bytetranfer
{
	required int32 count = 2;
}

//for vision-qt add prefix V for Vision
message VLayerInfos
{
	repeated VLayerInfo infos = 1;
}

message VLayerInfo
{
	required int32 index = 1;
	required string name = 2;
	required string type = 3;
}

message VFeatureMap
{
	required int32 width = 1;
	required int32 height = 2;
	required int32 num = 3;
	required int32 channel = 4;
	required bytes data = 5;
}

message VImage
{
	required int32 width = 1;
	required int32 height = 2;
	required int32 channel = 3;
	required bytes data = 4;
}

message VReqDeconv
{
	required int32 i_layer = 1;
	required int32 i_map = 2;
	optional bool do_deconv = 3 [default = false];
}

message VSetting
{
	
	required string model = 1;
	required string solver = 2;
	required string test = 3;
	optional int32 interval = 4 [default = -1];
}

message VResponse
{
	required Type type = 1;
	optional bytes data = 2;
	enum Type
	{
		WEIGHT = 1;
		FEATUREMAP = 2;
		LAYERINFOS = 3;
		INPUT = 4;
		DECONV = 5;
		ALL = 6;
		STATE = 7;
		SETTING = 8;
	}
}

message VAll
{
	repeated VResponse response = 1;
}

message VReqFeature
{
	required int32 i_layer = 1;
	required int32 i_image = 2;
	optional bool diff = 3[default = false];
}

message VReqWeight
{
	required int32 index = 1;
	optional bool diff = 2[default = false];
}

message VState
{
	optional bool auto = 1 [default = true];
	optional int32 input = 2 [default = -1];
	optional VReqFeature map = 3;
	optional VReqDeconv deconv = 4;
	optional VReqWeight weight = 5 ;
}

